/* Generated by GOB (v2.0.13)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include <libxml/parser.h>
#include <libxml/tree.h>
#include <gmodule.h>

#include "bima-template-form.h"
#include "file-utils.h"
#include "bima-plugin.h"

#ifndef __BIMA_PLUGIN_TEMPLATE__
#define __BIMA_PLUGIN_TEMPLATE__
typedef GType (*GetPluginType) (void);
#endif

#ifndef __TYPEDEF_BIMA_PLUGIN__
#define __TYPEDEF_BIMA_PLUGIN__
typedef struct _BimaPlugin BimaPlugin;
#endif


#ifndef __BIMA_TEMPLATE_H__
#define __BIMA_TEMPLATE_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define BIMA_TYPE_TEMPLATE	(bima_template_get_type())
#define BIMA_TEMPLATE(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), bima_template_get_type(), BimaTemplate)
#define BIMA_TEMPLATE_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), bima_template_get_type(), BimaTemplate const)
#define BIMA_TEMPLATE_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), bima_template_get_type(), BimaTemplateClass)
#define BIMA_IS_TEMPLATE(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), bima_template_get_type ())

#define BIMA_TEMPLATE_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), bima_template_get_type(), BimaTemplateClass)

/*
 * Main object structure
 */
#ifndef __TYPEDEF_BIMA_TEMPLATE__
#define __TYPEDEF_BIMA_TEMPLATE__
typedef struct _BimaTemplate BimaTemplate;
#endif
struct _BimaTemplate {
	GObject __parent__;
	/*< public >*/
	gchar * file_name;
	gchar * directory;
	gchar * app_type;
	gchar * author;
	gchar * description;
	gchar * plugin_file;
	BimaPlugin * plugin;
	GModule * module;
	GList * tentities;
	GList * tforms;
	GList * treports;
	GList * tadditions;
};

/*
 * Class definition
 */
typedef struct _BimaTemplateClass BimaTemplateClass;
struct _BimaTemplateClass {
	GObjectClass __parent__;
};


/*
 * Public methods
 */
GType	bima_template_get_type	(void);
void 	bima_template_add_tentity	(BimaTemplate * self,
					BimaTemplateForm * tentity);
void 	bima_template_add_tform	(BimaTemplate * self,
					BimaTemplateForm * tform);
void 	bima_template_add_treport	(BimaTemplate * self,
					BimaTemplateForm * treport);
void 	bima_template_add_taddition	(BimaTemplate * self,
					BimaTemplateForm * taddition);
gboolean 	bima_template_load_plugin	(BimaTemplate * self);
void 	bima_template_load_from_file	(BimaTemplate * self,
					gchar * file_name);
BimaTemplate * 	bima_template_new	(void);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
