/* Generated by GOB (v2.0.13)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


//#include "property.h"
#include <stdarg.h>
#include <gobject/gvaluecollector.h>

#ifndef __BIMA_PROPERTY_H__
#define __BIMA_PROPERTY_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define BIMA_TYPE_PROPERTY	(bima_property_get_type())
#define BIMA_PROPERTY(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), bima_property_get_type(), BimaProperty)
#define BIMA_PROPERTY_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), bima_property_get_type(), BimaProperty const)
#define BIMA_PROPERTY_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), bima_property_get_type(), BimaPropertyClass)
#define BIMA_IS_PROPERTY(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), bima_property_get_type ())

#define BIMA_PROPERTY_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), bima_property_get_type(), BimaPropertyClass)

/*
 * Main object structure
 */
#ifndef __TYPEDEF_BIMA_PROPERTY__
#define __TYPEDEF_BIMA_PROPERTY__
typedef struct _BimaProperty BimaProperty;
#endif
struct _BimaProperty {
	GObject __parent__;
	/*< public >*/
	gchar * name;
	gchar * type;
	gchar * title;
	GValue value;
};

/*
 * Class definition
 */
typedef struct _BimaPropertyClass BimaPropertyClass;
struct _BimaPropertyClass {
	GObjectClass __parent__;
};


/*
 * Public methods
 */
GType	bima_property_get_type	(void);
gchar * 	bima_property_get_name	(BimaProperty * self);
void 	bima_property_set_name	(BimaProperty * self,
					gchar * val);
void 	bima_property_vinit	(BimaProperty * self,
					gchar * type);
void 	bima_property_vset	(BimaProperty * self,
					GTypeCValue * value);
BimaProperty * 	bima_property_copy	(BimaProperty * self);
void 	bima_property_pget_valist	(GList * list,
					gchar * first_prop,
					va_list var_args);
void 	bima_property_v_get	(GList * list,
					const gchar * first_prop,
					...);
void 	bima_property_pset_valist	(GList * list,
					gchar * first_prop,
					va_list var_args);
void 	bima_property_v_set	(GList * list,
					const gchar * first_prop,
					...);
void 	bima_property_load_widget	(BimaProperty * self);
BimaProperty * 	bima_property_new	(gchar * name,
					gchar * title,
					gchar * type);

/*
 * Argument wrapping macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define BIMA_PROPERTY_PROP_NAME(arg)    	"name", __extension__ ({gchar *z = (arg); z;})
#define BIMA_PROPERTY_GET_PROP_NAME(arg)	"name", __extension__ ({gchar **z = (arg); z;})
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define BIMA_PROPERTY_PROP_NAME(arg)    	"name",(gchar *)(arg)
#define BIMA_PROPERTY_GET_PROP_NAME(arg)	"name",(gchar **)(arg)
#endif /* __GNUC__ && !__STRICT_ANSI__ */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
