/* Generated by GOB (v2.0.13)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include "bima-query-table.h"
#include "qry_parser.h"

#ifndef __BIMA_QUERY_H__
#define __BIMA_QUERY_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define BIMA_TYPE_QUERY	(bima_query_get_type())
#define BIMA_QUERY(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), bima_query_get_type(), BimaQuery)
#define BIMA_QUERY_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), bima_query_get_type(), BimaQuery const)
#define BIMA_QUERY_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), bima_query_get_type(), BimaQueryClass)
#define BIMA_IS_QUERY(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), bima_query_get_type ())

#define BIMA_QUERY_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), bima_query_get_type(), BimaQueryClass)

/*
 * Main object structure
 */
#ifndef __TYPEDEF_BIMA_QUERY__
#define __TYPEDEF_BIMA_QUERY__
typedef struct _BimaQuery BimaQuery;
#endif
struct _BimaQuery {
	GObject __parent__;
	/*< public >*/
	gint num_fields;
	GList * fields;
	gint num_tables;
	gint num_sub_qry;
	GList * tables;
	GList * groups;
	GList * orders;
	BimaQueryField * wheres;
	BimaQueryField * havings;
};

/*
 * Class definition
 */
typedef struct _BimaQueryClass BimaQueryClass;
struct _BimaQueryClass {
	GObjectClass __parent__;
};


/*
 * Public methods
 */
GType	bima_query_get_type	(void);
void 	bima_query_dump_tables	(BimaQuery * self);
gchar * 	bima_query_get_entity_alias	(BimaQuery * self,
					BimaEntity * entity);
BimaAttribute * 	bima_query_locate_field_attribute	(BimaQuery * self,
					BimaQueryField * qry_field);
gint 	bima_query_validate_fields	(BimaQuery * self);
BimaAttribute * 	bima_query_get_attribute_sub_query	(BimaQuery * self,
					BimaQueryField * qfield);
gint 	bima_query_get_number_of_fields	(BimaQuery * self);
gint 	bima_query_get_number_of_tables	(BimaQuery * self);
gint 	bima_query_get_number_of_sub_query	(BimaQuery * self);
BimaQueryTable * 	bima_query_get_nth_table_in_table	(BimaQuery * self,
					gint n,
					gint * nth,
					BimaQueryTable * qtbl);
BimaQueryTable * 	bima_query_get_nth_table	(BimaQuery * self,
					gint n);
void 	bima_query_count_table_in_table	(BimaQuery * self,
					BimaQueryTable * qtbl);
void 	bima_query_count_num_of_tables	(BimaQuery * self);
gint 	bima_query_count_number_of_fields	(BimaQuery * self);
GObject * 	bima_query_get_nth_attribute_sub	(BimaQuery * self,
					gint n);
GObject * 	bima_query_get_nth_attribute	(BimaQuery * self,
					gint n,
					BimaQueryTable ** qtbl,
					BimaQueryField ** qfld);
gchar * 	bima_query_get_str	(BimaQuery * self);
gchar * 	bima_query_get_fields_str	(GList * plist);
gchar * 	bima_query_get_tables_str	(GList * tlist);
BimaQuery * 	bima_query_new	(void);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
