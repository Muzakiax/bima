/* Generated by GOB (v2.0.13)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>
#ifndef __BIMA_REPORT_H__
#define __BIMA_REPORT_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define BIMA_TYPE_REPORT	(bima_report_get_type())
#define BIMA_REPORT(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), bima_report_get_type(), BimaReport)
#define BIMA_REPORT_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), bima_report_get_type(), BimaReport const)
#define BIMA_REPORT_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), bima_report_get_type(), BimaReportClass)
#define BIMA_IS_REPORT(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), bima_report_get_type ())

#define BIMA_REPORT_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), bima_report_get_type(), BimaReportClass)

/*
 * Main object structure
 */
#ifndef __TYPEDEF_BIMA_REPORT__
#define __TYPEDEF_BIMA_REPORT__
typedef struct _BimaReport BimaReport;
#endif
struct _BimaReport {
	GObject __parent__;
	/*< public >*/
	gchar * id;
	gchar * name;
	gchar * title;
	gchar * primary_obj_id;
	gchar * description;
	gchar * sql_text;
	gchar * template_id;
};

/*
 * Class definition
 */
typedef struct _BimaReportClass BimaReportClass;
struct _BimaReportClass {
	GObjectClass __parent__;
};


/*
 * Public methods
 */
GType	bima_report_get_type	(void);
gchar * 	bima_report_get_id	(BimaReport * self);
void 	bima_report_set_id	(BimaReport * self,
					gchar * val);
gchar * 	bima_report_get_name	(BimaReport * self);
void 	bima_report_set_name	(BimaReport * self,
					gchar * val);
gchar * 	bima_report_get_title	(BimaReport * self);
void 	bima_report_set_title	(BimaReport * self,
					gchar * val);
gchar * 	bima_report_get_primary_obj_id	(BimaReport * self);
void 	bima_report_set_primary_obj_id	(BimaReport * self,
					gchar * val);
gchar * 	bima_report_get_description	(BimaReport * self);
void 	bima_report_set_description	(BimaReport * self,
					gchar * val);
gchar * 	bima_report_get_sql_text	(BimaReport * self);
void 	bima_report_set_sql_text	(BimaReport * self,
					gchar * val);
BimaReport * 	bima_report_new	(void);

/*
 * Argument wrapping macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define BIMA_REPORT_PROP_ID(arg)    	"id", __extension__ ({gchar *z = (arg); z;})
#define BIMA_REPORT_GET_PROP_ID(arg)	"id", __extension__ ({gchar **z = (arg); z;})
#define BIMA_REPORT_PROP_NAME(arg)    	"name", __extension__ ({gchar *z = (arg); z;})
#define BIMA_REPORT_GET_PROP_NAME(arg)	"name", __extension__ ({gchar **z = (arg); z;})
#define BIMA_REPORT_PROP_TITLE(arg)    	"title", __extension__ ({gchar *z = (arg); z;})
#define BIMA_REPORT_GET_PROP_TITLE(arg)	"title", __extension__ ({gchar **z = (arg); z;})
#define BIMA_REPORT_PROP_PRIMARY_OBJ_ID(arg)    	"primary_obj_id", __extension__ ({gchar *z = (arg); z;})
#define BIMA_REPORT_GET_PROP_PRIMARY_OBJ_ID(arg)	"primary_obj_id", __extension__ ({gchar **z = (arg); z;})
#define BIMA_REPORT_PROP_DESCRIPTION(arg)    	"description", __extension__ ({gchar *z = (arg); z;})
#define BIMA_REPORT_GET_PROP_DESCRIPTION(arg)	"description", __extension__ ({gchar **z = (arg); z;})
#define BIMA_REPORT_PROP_SQL_TEXT(arg)    	"sql_text", __extension__ ({gchar *z = (arg); z;})
#define BIMA_REPORT_GET_PROP_SQL_TEXT(arg)	"sql_text", __extension__ ({gchar **z = (arg); z;})
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define BIMA_REPORT_PROP_ID(arg)    	"id",(gchar *)(arg)
#define BIMA_REPORT_GET_PROP_ID(arg)	"id",(gchar **)(arg)
#define BIMA_REPORT_PROP_NAME(arg)    	"name",(gchar *)(arg)
#define BIMA_REPORT_GET_PROP_NAME(arg)	"name",(gchar **)(arg)
#define BIMA_REPORT_PROP_TITLE(arg)    	"title",(gchar *)(arg)
#define BIMA_REPORT_GET_PROP_TITLE(arg)	"title",(gchar **)(arg)
#define BIMA_REPORT_PROP_PRIMARY_OBJ_ID(arg)    	"primary_obj_id",(gchar *)(arg)
#define BIMA_REPORT_GET_PROP_PRIMARY_OBJ_ID(arg)	"primary_obj_id",(gchar **)(arg)
#define BIMA_REPORT_PROP_DESCRIPTION(arg)    	"description",(gchar *)(arg)
#define BIMA_REPORT_GET_PROP_DESCRIPTION(arg)	"description",(gchar **)(arg)
#define BIMA_REPORT_PROP_SQL_TEXT(arg)    	"sql_text",(gchar *)(arg)
#define BIMA_REPORT_GET_PROP_SQL_TEXT(arg)	"sql_text",(gchar **)(arg)
#endif /* __GNUC__ && !__STRICT_ANSI__ */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
